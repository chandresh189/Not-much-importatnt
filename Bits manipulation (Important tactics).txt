Bits manipulation (Important tactics)

Table of content
1)bitwise shift
2)quickly check if a number is odd or even
3)Direct XOR of all numbers from 1 to n 
4)isPowerOfTwo function by / and checking
5) by one liner expression bool
---------------------------------------------------------


1) **bitwise shift**

#include <stdio.h> 

int main() 
{ 
	int x = 19; 
	printf("x << 1 = %d\n", x << 1); //left shift
	printf("x >> 1 = %d\n", x >> 1); //right shift
	return 0; 
} 
----------------------------------------------
Output:
x << 1 = 38 x ko badhava mila
x >> 1 = 9  x ko kheench liya
------------------------------------------

2)

**even odd**
The & operator can be used to quickly check if a number is odd or even.

#include <stdio.h> 

int main() 
{ 
	int x = 19; 
	(x & 1) ? printf("Odd") : printf("Even"); 
	return 0; 
}
----------------------------- 
Output:
Odd

3)
*** Direct XOR of all numbers from 1 to n ***
 
int computeXOR(int n) 
{ 
	if (n % 4 == 0) 
		return n; 
	if (n % 4 == 1) 
		return 1; 
	if (n % 4 == 2) 
		return n + 1; 
	else
		return 0; 
} 
--------------------------
Input: 6
Output: 7
----------------------------

4)
check if thde number is power of 2
bool isPowerOfTwo(int x)
    {
        if(x == 0)
            return false;
        else
        {
            while(x % 2 == 0) x /= 2;
            return (x == 1);
            }
    }
-----------------------------------------
5)

bool isPowerOfTwo(int x)
    {
        // x will check if x == 0 and !(x & (x - 1)) will check if x is a power of 2 or not
        return (x && !(x & (x - 1)));
    }
    
    example = 
    
    Let, x = 4 = (100)2
x - 1 = 3 = (011)2
x & (x-1) = 4 & 3 = (100)2 & (011)2 = (000)2
